
;;;;;
;;@type cmd
;;@@parse-relative #f


;;;;;
;;@type Function
;;@name reload-verbose
;;@description これは再ロード手続きのメッセージ出力レベルを制御するパラメータです。
;;引数なしで呼ばれると現在の出力レベルフラグを返します。flagと
;;ともに呼ばれると現在の出力レベルをこれに設定します。
;;
;;@param :optional 
;;@param flag 

;;;;;
;;@type Function
;;@name module-reload-rules
;;@description これは一種の「パラメータ」(Parameters参照)で、
;;reload-modified-modulesに対応するデフォルトのモジュールルールを
;;保持しています。引数なしで呼ばれたときには、現在のモジュールルールを
;;返します。module-rulesとともに呼ばれたきにはその引数を
;;現在のモジュールルールにします。
;;
;;@param :optional 
;;@param module-rules 

;;;;;
;;@type Function
;;@name reload-modified-modules
;;@description 前回ロードしたときより変更のあったモジュールを再ロードします。
;;オプション引数 module-rules が与えられていれば、再ロードした
;;モジュールに適用する再定義ルールを決定するために使います。
;;module-rulesが省略された場合、現在のルールが適用されます。
;;デフォルトの現在のルールは空です。現在のルールは
;;module-reload-rulesをつかって設定できます。
;;
;;
;;@param :optional 
;;@param module-rules 

;;;;;
;;@type Function
;;@name reload
;;@description 指定されたモジュールを再ロードします。オプションで
;;rule ... をつかって再定義ルールを指定することができます。
;;ここで、それぞれの rule は上の <rule> で定義されたものです。
;;
;;@param module-name 
;;@param :optional 
;;@param rule 
;;@param ... 

;;;;;
;;@type Method
;;@name d
;;@description Schemeオブジェクトobjの詳細情報を表示します。
;;既定メソッドはobjのクラスを表示し、さらにobjがスロットを
;;持っていればその名前と内容をリストします。
;;このメソッドをスペシャライズすることによりクラス毎に表示をカスタマイズできます。
;;
;;@param obj 

;;;;;
;;@type Method
;;@name describe
;;@description Schemeオブジェクトobjの詳細情報を表示します。
;;既定メソッドはobjのクラスを表示し、さらにobjがスロットを
;;持っていればその名前と内容をリストします。
;;このメソッドをスペシャライズすることによりクラス毎に表示をカスタマイズできます。
;;
;;@param obj 

;;;;;
;;@type Macro
;;@name apropos
;;@description 名前がpatternにマッチするような定義された変数のリストを表示します。
;;moduleにモジュールオブジェクトまたはモジュール名を与えた場合は、
;;そのモジュール内で定義されている変数のみが表示されます。moduleが
;;省略された場合は、カレントモジュールから「見える」変数が全て表示されます。
;;
;;patternはシンボルか正規表現オブジェクトでなければなりません。
;;シンボルの場合、そのシンボル名を部分文字列として名前に含むような変数が
;;リストされます。正規表現オブジェクトの場合は、その正規表現にマッチする
;;名前を持つ変数がリストされます。
;;
;;いくつか例を示します。
;;example:
;;  ;; "string"を名前に含む変数を表示
;;  (apropos 'string)
;;  
;;  ;; srfi-14モジュールの中のみを検索
;;  (apropos 'char 'srfi-14)
;;
;;@param pattern 
;;@param :optional 
;;@param module 

