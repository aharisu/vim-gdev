
;;;;;
;;@type cmd
;;@@parse-relative #f


;;;;;
;;@type Function
;;@name mt-random-fill-f64vector!
;;@description 与えられたユニフォームベクタをランダムな数値で埋めます。
;;mt-random-fill-u32vector!では、要素は0と2^32-1の間の
;;正の正確整数で埋められます。
;;mt-random-fill-f32vector!とmt-random-fill-f64vector!
;;では、0.0と1.0(含まれない)の間の不正確実数で埋められます。
;;
;;@param mt 
;;@param f64vector 

;;;;;
;;@type Function
;;@name mt-random-fill-f32vector!
;;@description 与えられたユニフォームベクタをランダムな数値で埋めます。
;;mt-random-fill-u32vector!では、要素は0と2^32-1の間の
;;正の正確整数で埋められます。
;;mt-random-fill-f32vector!とmt-random-fill-f64vector!
;;では、0.0と1.0(含まれない)の間の不正確実数で埋められます。
;;
;;@param mt 
;;@param f32vector 

;;;;;
;;@type Function
;;@name mt-random-fill-u32vector!
;;@description 与えられたユニフォームベクタをランダムな数値で埋めます。
;;mt-random-fill-u32vector!では、要素は0と2^32-1の間の
;;正の正確整数で埋められます。
;;mt-random-fill-f32vector!とmt-random-fill-f64vector!
;;では、0.0と1.0(含まれない)の間の不正確実数で埋められます。
;;
;;@param mt 
;;@param u32vector 

;;;;;
;;@type Function
;;@name mt-random-integer
;;@description 0からrange-1までの正の正確整数をランダムに返します。
;;rangeはいかなる正の正確整数でも構いません。
;;
;;@param mt 
;;@param range 

;;;;;
;;@type Function
;;@name mt-random-real0
;;@description 0.0と1.0の間のランダムな実数を返します。
;;1.0は範囲に含まれません。
;;mt-random-realは、0.0も範囲に含みませんが、
;;mt-random-real0は含みます。
;;0.0を含まないのは、SRFI-27ドラフトに依拠しています。
;;
;;@param mt 

;;;;;
;;@type Function
;;@name mt-random-real
;;@description 0.0と1.0の間のランダムな実数を返します。
;;1.0は範囲に含まれません。
;;mt-random-realは、0.0も範囲に含みませんが、
;;mt-random-real0は含みます。
;;0.0を含まないのは、SRFI-27ドラフトに依拠しています。
;;
;;@param mt 

;;;;;
;;@type Function
;;@name mt-random-set-state!
;;@description Mersenne Twister RNG mtを取り出して再インストールします。
;;状態は、625要素のu32vectorで表現されます。
;;状態はどこにでも保存することができ、仮想的なランダムシーケンスの
;;生成を続行するために、<mersenne-twister>のインスタンスとして
;;リストアできます。
;;
;;@param mt 
;;@param state 

;;;;;
;;@type Function
;;@name mt-random-get-state
;;@description Mersenne Twister RNG mtを取り出して再インストールします。
;;状態は、625要素のu32vectorで表現されます。
;;状態はどこにでも保存することができ、仮想的なランダムシーケンスの
;;生成を続行するために、<mersenne-twister>のインスタンスとして
;;リストアできます。
;;
;;@param mt 

;;;;;
;;@type Function
;;@name mt-random-set-seed!
;;@description Mersenne Twister RNG mtにランダムシードの値seedをセットします。
;;seedは任意の正の正確整数か、任意長のu32vector
;;(Homogeneous vectors参照)が使えます。
;;整数の場合は、初期化のために低位の32ビットが使われます。
;;u32vectorの場合は、初期化のために624までの要素が使われます。
;;
;;@param mt 
;;@param seed 

;;;;;
;;@type Class
;;@name <mersenne-twister>
;;@description Mersenne Twister RNGの状態をカプセル化するクラスです。
;;このクラスのそれぞれのインスタンスは独自の状態を持ち、
;;個別のシードで初期化されていれば、それぞれがランダムビットの
;;独立したソースになり得ます。
;;
;;ランダムシードの値は初期化引数:seedにより初期化時に与えるか、
;;以下で説明するmt-random-set-seed!を使います。
;;
;;example:
;;  (define m (make <mersenne-twister> :seed (sys-time)))
;;  
;;  (mt-random-real m) ==> 0.10284287848537865
;;  (mt-random-real m) ==> 0.463227748348805
;;  (mt-random-real m) ==> 0.8628500643709712
;;  ...
;;

